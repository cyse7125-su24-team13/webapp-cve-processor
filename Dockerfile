# Use the official Golang image as a base image
FROM golang:1.18-alpine AS builder

# Set the working directory inside the container
WORKDIR /app

# Copy the go.mod and go.sum files to the working directory
COPY go.mod go.sum ./

# Download the dependencies
RUN go mod download

# Copy the rest of the application source code to the working directory
COPY . .

# Build the application
RUN go build -o mycveprocessor ./cmd/main.go

# Use a smaller base image for the final image
FROM alpine:latest

# Set the working directory inside the container
WORKDIR /root/

# Copy the binary from the builder image
COPY --from=builder /app/mycveprocessor .

# Copy the configuration file
COPY --from=builder /app/config.json .

# Copy the initialization SQL file if needed
COPY --from=builder /app/init.sql .

# Copy the cvetest directory
COPY --from=builder /app/cvetest ./cvetest

# Set the entrypoint for the container
ENTRYPOINT ["./mycveprocessor"]
