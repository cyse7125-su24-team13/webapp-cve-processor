// kafkapkg/kafka.go

package kafkapkg

import (
	"log"
	"os"

	"github.com/Shopify/sarama"
)

// InitializeKafkaProducer initializes and returns a Kafka producer instance
func InitializeKafkaProducer() (sarama.SyncProducer, error) {
	config := sarama.NewConfig()
	config.Producer.Return.Successes = true // Ensure Producer.Return.Successes is set to true
	dsn := os.Getenv("KAFKA_BROKERS")
	var kafkaBrokers = []string{dsn}
	producer, err := sarama.NewSyncProducer(kafkaBrokers, config)
	if err != nil {
		return nil, err
	}

	return producer, nil
}

// SendJSONToKafka sends a JSON payload to a Kafka topic
func SendJSONToKafka(producer sarama.SyncProducer, jsonPayload []byte, topic string) error {
	msg := &sarama.ProducerMessage{
		Topic: topic,
		Value: sarama.ByteEncoder(jsonPayload),
	}

	// Send message
	_, _, err := producer.SendMessage(msg)
	if err != nil {
		return err
	}

	log.Println("Message sent successfully to Kafka")
	return nil
}
